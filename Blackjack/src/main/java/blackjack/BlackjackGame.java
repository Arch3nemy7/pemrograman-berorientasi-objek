/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package blackjack;

import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author bagas
 */
public class BlackjackGame extends JFrame {

    private Deck deck;
    private Dealer dealer;
    private Player player;
    private int taruhan;
    private boolean sedangMain;
    int cardWidth = 110;
    int cardHeight = 154;

    /**
     * Creates new form BlackjackGame
     */
    public BlackjackGame() {
        this.setSize(745, 605);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        initComponents();
        this.deck = new Deck();
        this.dealer = new Dealer(deck);
//        this.player = new Player(deck);
    }
    
    public void setPlayer(Player player) {
        this.player = player;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boardPanel = new javax.swing.JPanel(){
            @Override
            public void paintComponent(Graphics g) {
                super.paintComponent(g);

                if (dealer.getNilai() != 0) {
                    Image hiddenCardImg = new ImageIcon(getClass().getResource("../cards/BACK.png")).getImage();
                    if (!btnStay.isEnabled()) {
                        hiddenCardImg = new ImageIcon(getClass().getResource(dealer.getKartuTersembunyi().getImagePath())).getImage();
                    }
                    g.drawImage(hiddenCardImg, 20, 20, cardWidth, cardHeight, null);

                    //draw dealer's hand
                    for (int i = 0; i < dealer.getKartu().size(); i++) {
                        Card card = dealer.getKartu().get(i);
                        Image cardImg = new ImageIcon(getClass().getResource(card.getImagePath())).getImage();
                        g.drawImage(cardImg, cardWidth + 25 + (cardWidth + 5)*i, 20, cardWidth, cardHeight, null);
                    }

                    for (int i = 0; i < player.getKartu().size(); i++) {
                        Card card = player.getKartu().get(i);
                        Image cardImg = new ImageIcon(getClass().getResource(card.getImagePath())).getImage();
                        g.drawImage(cardImg, 20 + (cardWidth + 5)*i, 320, cardWidth, cardHeight, null);
                    }
                }
            }
        };
        txtMessage = new javax.swing.JLabel();
        btnStay = new javax.swing.JButton();
        btnHit = new javax.swing.JButton();
        btnDouble = new javax.swing.JButton();
        btnSurrender = new javax.swing.JButton();
        txtUangAnda = new javax.swing.JLabel();
        txtUang = new javax.swing.JTextField();
        txtTotalTaruhan = new javax.swing.JLabel();
        inputTaruhan = new javax.swing.JTextField();
        txtJudulBlackjack = new javax.swing.JLabel();
        btnContinue = new javax.swing.JButton();
        btnNewGame = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BlackJack");

        boardPanel.setBackground(new java.awt.Color(53, 101, 77));
        boardPanel.setPreferredSize(new java.awt.Dimension(600, 540));

        txtMessage.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        txtMessage.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout boardPanelLayout = new javax.swing.GroupLayout(boardPanel);
        boardPanel.setLayout(boardPanelLayout);
        boardPanelLayout.setHorizontalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boardPanelLayout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(txtMessage)
                .addContainerGap(348, Short.MAX_VALUE))
        );
        boardPanelLayout.setVerticalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boardPanelLayout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(txtMessage)
                .addContainerGap(290, Short.MAX_VALUE))
        );

        btnStay.setText("Stay");
        btnStay.setEnabled(false);
        btnStay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStayActionPerformed(evt);
            }
        });

        btnHit.setText("Hit");
        btnHit.setEnabled(false);
        btnHit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitActionPerformed(evt);
            }
        });

        btnDouble.setText("Double");
        btnDouble.setEnabled(false);
        btnDouble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoubleActionPerformed(evt);
            }
        });

        btnSurrender.setText("Surrender");
        btnSurrender.setEnabled(false);
        btnSurrender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSurrenderActionPerformed(evt);
            }
        });

        txtUangAnda.setText("Uang Anda");

        txtUang.setEditable(false);
        txtUang.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtUang.setText("$10000");

        txtTotalTaruhan.setText("Total Taruhan");

        inputTaruhan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtJudulBlackjack.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtJudulBlackjack.setText("Blackjack");

        btnContinue.setText("Continue");
        btnContinue.setEnabled(false);
        btnContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinueActionPerformed(evt);
            }
        });

        btnNewGame.setText("New Game");
        btnNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUangAnda)
                            .addComponent(txtTotalTaruhan)
                            .addComponent(txtJudulBlackjack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtUang)
                            .addComponent(inputTaruhan))
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNewGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnContinue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28))))
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(btnSurrender)
                .addGap(18, 18, 18)
                .addComponent(btnStay)
                .addGap(18, 18, 18)
                .addComponent(btnHit)
                .addGap(18, 18, 18)
                .addComponent(btnDouble)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(txtJudulBlackjack)
                        .addGap(18, 18, 18)
                        .addComponent(txtUangAnda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotalTaruhan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputTaruhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnNewGame)
                        .addGap(18, 18, 18)
                        .addComponent(btnContinue)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHit)
                    .addComponent(btnStay)
                    .addComponent(btnDouble)
                    .addComponent(btnSurrender))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewGameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNewGameActionPerformed
        player.setUang(10000);
        txtUang.setText("$" + player.getUang());

        this.taruhan = getTaruhan();
        if (taruhan > player.getUang()) {
            JOptionPane.showMessageDialog(
                    this,
                    "Taruhan tidak boleh melebihi uang",
                    "Kesalahan",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            startGame();
        }
    }// GEN-LAST:event_btnNewGameActionPerformed

    private void btnContinueActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnContinueActionPerformed
        this.taruhan = getTaruhan();

        if (taruhan > player.getUang()) {
            JOptionPane.showMessageDialog(
                    this,
                    "Taruhan tidak boleh melebihi uang",
                    "Kesalahan",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            startGame();
        }
    }// GEN-LAST:event_btnContinueActionPerformed

    private void startGame() {
        resetGame();
        sedangMain = true;
        updateButton();

        deck.siapkanDeck();
        player.setDeck(deck);
        player.tambahKartu();
        player.tambahKartu();
        dealer.tambahKartuTersembunyi();
        dealer.tambahKartu();

        if (player.getNilai() == 21) {
            btnSurrender.setEnabled(false);
            btnHit.setEnabled(false);
            btnDouble.setEnabled(false);
        }

        txtMessage.setText("");
        inputTaruhan.setEditable(false);
        boardPanel.repaint();
    }

    private void resetGame() {
        dealer.getKartu().clear();
        player.getKartu().clear();
        dealer.setNilai(0);
        player.setNilai(0);
        dealer.setJumlahAs(0);
        player.setJumlahAs(0);
        boardPanel.repaint();
    }

    private void btnSurrenderActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSurrenderActionPerformed
        while (dealer.getNilai() < 16) {
            dealer.tambahKartu();
        }

        taruhan = taruhan / 2;
        determineWinner(taruhan);
        boardPanel.repaint();
    }// GEN-LAST:event_btnSurrenderActionPerformed

    private void btnStayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnStayActionPerformed
        while (true) {
            boolean shouldHit = dealer.shouldHit(player);

            if (shouldHit == true) {
                dealer.tambahKartu();
            } else {
                determineWinner(taruhan);
                boardPanel.repaint();
                break;
            }
        }
    }// GEN-LAST:event_btnStayActionPerformed

    private void btnHitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnHitActionPerformed
        player.tambahKartu();

        if (player.getNilai() == 21) {
            btnSurrender.setEnabled(false);
            btnHit.setEnabled(false);
            btnDouble.setEnabled(false);
        } else if (player.getNilai() > 21) {
            determineWinner(taruhan);
        }
        boardPanel.repaint();
    }// GEN-LAST:event_btnHitActionPerformed

    private void btnDoubleActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDoubleActionPerformed
        if (taruhan * 2 > player.getUang()) {
            JOptionPane.showMessageDialog(
                    this,
                    "Taruhan tidak boleh melebihi uang",
                    "Kesalahan",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            taruhan = taruhan * 2;
            player.tambahKartu();

            while (true) {
                boolean shouldHit = dealer.shouldHit(player);

                if (shouldHit == true) {
                    dealer.tambahKartu();
                } else {
                    determineWinner(taruhan);
                    boardPanel.repaint();
                    break;
                }
            }
        }
    }// GEN-LAST:event_btnDoubleActionPerformed

    private void determineWinner(int taruhan) {
        String message;
        sedangMain = false;

        updateButton();

        System.out.println("STAY: ");
        System.out.println(dealer.getNilai());
        System.out.println(player.getNilai());

        if (player.getNilai() == dealer.getNilai()) {
            message = "Tie!";
        } else if (player.getNilai() > 21) {
            message = "You Lose!";
        } else if (dealer.getNilai() > 21) {
            message = "You Win!";
        } else if (player.getNilai() > dealer.getNilai()) {
            message = "You Win!";
        } else {
            message = "You Lose!";
        }

        if (message.equals("You Lose!")) {
            player.setUang(player.getUang() - taruhan);
        } else if (message.equals("You Win!")) {
            player.setUang(player.getUang() + taruhan);
        }

        txtUang.setText("$" + player.getUang());

        if (player.getUang() > 0) {
            txtMessage.setText(message);
            inputTaruhan.setEditable(true);
        } else {
            txtMessage.setText("Game Over");
            inputTaruhan.setEditable(true);
            btnContinue.setEnabled(false);
        }
    }

    private void updateButton() {
        if (sedangMain) {
            btnSurrender.setEnabled(true);
            btnStay.setEnabled(true);
            btnHit.setEnabled(true);
            btnDouble.setEnabled(true);
            btnNewGame.setEnabled(false);
            btnContinue.setEnabled(false);
        } else {
            btnSurrender.setEnabled(false);
            btnStay.setEnabled(false);
            btnHit.setEnabled(false);
            btnDouble.setEnabled(false);
            btnNewGame.setEnabled(true);
            btnContinue.setEnabled(true);
        }
    }

    private int getTaruhan() {
        try {
            return Integer.parseInt(inputTaruhan.getText());
        } catch (NumberFormatException e) {
            return 0;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlackjackGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boardPanel;
    private javax.swing.JButton btnContinue;
    private javax.swing.JButton btnDouble;
    private javax.swing.JButton btnHit;
    private javax.swing.JButton btnNewGame;
    private javax.swing.JButton btnStay;
    private javax.swing.JButton btnSurrender;
    private javax.swing.JTextField inputTaruhan;
    private javax.swing.JLabel txtJudulBlackjack;
    private javax.swing.JLabel txtMessage;
    private javax.swing.JLabel txtTotalTaruhan;
    private javax.swing.JTextField txtUang;
    private javax.swing.JLabel txtUangAnda;
    // End of variables declaration//GEN-END:variables
}
